{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","join","content","onClick","Notification","notification","hasOwnProperty","type","concat","message","services_notes","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","backgroundColor","textAlign","position","bottom","width","App","props","_useState","useState","notes","_useState2","Object","slicedToArray","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","setNotification","clearNotification","useEffect","noteService","initialNotes","notesFiltered","filter","Fragment","components_Notification","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","returnedNote","setTimeout","value","placeholder","onChange","currentTarget","map","components_Note","key","find","changedNote","objectSpread","catch","error","n","toggleImportanceOf","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.38db9eda.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ?\n    '\\u2193' :  // arrow down\n    '\\u2191' ; // arrow up\n\n  return (\n    <li className={ ['note', note.important ? ' note--important': ''].join('') }>\n      <p className='note__content'>{ note.content }</p>\n      <button\n        className='note__button'\n        onClick={ toggleImportance }>{ label }</button>\n    </li>\n  )\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if(\n    !notification ||\n    !notification.hasOwnProperty('message')\n  ) return null;\n\n  const type = notification.type || 'error';\n\n  return (\n    <div className={ `notification notification--${ type }` }>\n      { notification.message }\n    </div>\n  )\n}\n\nexport default Notification;\n","import axios from 'axios'\nconst API_URL = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(API_URL);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(API_URL, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${API_URL}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update };\n\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\nimport './index.css';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'darkslategray',\n    backgroundColor: 'gainsboro',\n    textAlign: 'center',\n    position: 'absolute',\n    bottom: '0',\n    width: '100%'\n  };\n\n  return (\n    <footer\n      style={footerStyle}\n    >\n      <em>Notes &mdash; Crasman &copy; 2019</em>\n    </footer>\n  );\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const clearNotification = () => setNotification(null);\n\n  const hook = () => {\n    noteService.getAll()\n      .then(initialNotes => setNotes(initialNotes));\n  };\n\n  useEffect(hook, []);\n\n  const notesFiltered = showAll ?\n    notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(note => note.id === id);\n    const changedNote = { ...note, important: !note.important }\n\n    noteService.update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note =>\n          note.id !== id ? note : returnedNote\n        ))\n      })\n      .catch(error => {\n        setNotification({\n          message: `Muistiinpanoa '${note.content}' ei löydy.\\n\\n${error}`,\n          type: 'error'\n        });\n        setTimeout(clearNotification, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      })\n  }\n\n  const rows = () => notesFiltered.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  );\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: false,\n    }\n\n    noteService.create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n        setNotification({\n          message: 'Muistiinpano lisätty!',\n          type: 'confirm'\n        });\n        setTimeout(clearNotification, 5000);\n      })\n\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.currentTarget.value);\n  };\n\n  return (\n    <>\n    <section className=\"notes\">\n      <h1 className=\"notes__title\">Muistiinpanot</h1>\n      <Notification\n        notification={notification}\n      />\n      <div className='notes__controls'>\n        <form onSubmit={addNote}>\n          <input value={newNote} placeholder='Uusi muistiinpano' onChange={ handleNoteChange } />\n          <button type=\"submit\">+ Lisää muistiinpano</button>\n        </form>\n        <button onClick={ () => setShowAll(!showAll) }>\n          Näytä { showAll ? 'vain tärkeät' : 'kaikki' }\n        </button>\n      </div>\n      <ul className=\"notes__list\">{rows()}</ul>\n    </section>\n    <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst notes = [];\n\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}